columns_dict = {
    "is_fraud": {
        "description": "TARGET - 1 if fraud, 0 otherwise",
        "type": "numeric",
        "class": "numeric",
        "missing_values": "None",
        "nulls_method": "None",
        "imputer": "None",
    },
    "email__valid": {
        "description": "True (1) if the email address is valid",
        "type": "numeric",
        "class": "boolean",
        "missing_values": "None",
        "nulls_method": "None",
        "imputer": "None",
    },
    "email__first_seen_days": {
        "description": "Count of days since the email was first observed in the Ekata Identity Network. If the email has not been observed before, first_seen_days will be 0.",
        "type": "numeric",
        "class": "numeric",
        "missing_values": "Need to check with Ekata",
        "nulls_method": "ArbitraryNumberImputer_0",
        "imputer": "None",
    },
    "email__domain_creation_date": {
        "description": "The date when the email domain was created.",
        "type": "date",
        "class": "date",
        "missing_values": "Need to check with Ekata",
        "nulls_method": "None",
        "imputer": "days_back",
    },
    "email__to_name": {
        "description": "The match status between the input name and the queried entity. Enum: 'not-found' 'match' 'no-match'",
        "type": "object",
        "class": "categorical",
        "missing_values": "Need to check with Ekata",
        "nulls_method": "CategoricalImputer_Missing",  # Maybe need to change to 'not-found'
        "imputer": "OneHotEncoderTop10",
    },
    "ip__risk": {
        "description": "True (1) if the IP address is considered risky, based on multiple IP data points and velocity calculations'",
        "type": "numeric",
        "class": "boolean",
        "missing_values": "None",
        "nulls_method": "None",
        "imputer": "None",
    },
    "ip__risk_score": {
        "description": "Comprehensive risk score associated with an IP address, with a higher score indicating a riskier individual. A number between 0 and 1 rounded to three decimal places.",
        "type": "numeric",
        "class": "numeric",
        "missing_values": "None",
        "nulls_method": "None",
        "imputer": "None",
    },
    "ip__last_seen_days": {
        "description": "Count of days since the IP address was last observed in the Ekata Identity Network. If the IP address has not been observed before, last_seen_days will be 0.",
        "type": "numeric",
        "class": "numeric",
        "missing_values": "None",
        "nulls_method": "None",
        "imputer": "None",
    },
    "ip__geolocation_country_code": {
        "description": "The ISO-3166 alpha-2 country code of the location of the IP address",
        "type": "object",
        "class": "categorical",
        "missing_values": "None",
        "nulls_method": "CategoricalImputer_Missing",
        "imputer": "OneHotEncoderTop10",
    },
    "ip__geolocation_subdivision": {
        "description": "More granular detail about the IP address location",
        "type": "object",
        "class": "categorical",
        "missing_values": "None",
        "nulls_method": "CategoricalImputer_Missing",
        "imputer": "OneHotEncoderTop10",
    },
    "ip__address_distance": {
        "description": "The distance (in miles) between the IP address and the physical address",
        "type": "numeric",
        "class": "numeric",
        "missing_values": "None",
        "nulls_method": "None",
        "imputer": "None",
    },
    "phone__valid": {
        "description": "True (1) if the phone number is valid",
        "type": "numeric",
        "class": "numeric",
        "missing_values": "None",
        "nulls_method": "None",
        "imputer": "None",
    },
    "phone__line_type": {
        "description": "The line type of the phone number. Enum: 'non-fixed-voip', 'premium', 'voicemail', 'landline', 'fixed-voip', 'toll-free', 'other', 'mobile' ",
        "type": "object",
        "class": "categorical",
        "missing_values": "None",
        "nulls_method": "CategoricalImputer_Missing",
        "imputer": "OneHotEncoderTop10",
    },
    "phone__carrier": {
        "description": "The company that provides voice and/or data services for the phone number. Carriers are returned at the MVNO level.",
        "type": "object",
        "class": "categorical",
        "missing_values": "None",
        "nulls_method": "None",
        "imputer": "OneHotEncoderTop10",  # Need small letters imputer as well
    },
    "phone__country_code": {
        "description": "The ISO-3166 alpha-2 country code of the phone number",
        "type": "object",
        "class": "categorical",
        "missing_values": "None",
        "nulls_method": "CategoricalImputer_Missing",
        "imputer": "OneHotEncoderTop10",
    },
    "phone__last_seen_days": {
        "description": "Count of days since the phone was last observed in the Ekata Identity Network. If the phone has not been observed before, last_seen_days will be 0",
        "type": "numeric",
        "class": "numeric",
        "missing_values": "None",
        "nulls_method": "None",
        "imputer": "None",
    },
    "phone__email__first_seen_days": {
        "description": "Count of days since the combination of phone and email was first observed in the Ekata Identity Network. If that combination has not been observed before, first_seen_days will be 0",
        "type": "numeric",
        "class": "numeric",
        "missing_values": "None",
        "nulls_method": "None",
        "imputer": "None",
    },
    "phone__to_name": {
        "description": "The match status between the input name and the queried entity. Enum: 'not-found', 'match', 'no-match'",
        "type": "object",
        "class": "categorical",
        "missing_values": "Need to check with Ekata",
        "nulls_method": "CategoricalImputer_Missing",  # Maybe need to change to 'not-found'
        "imputer": "OneHotEncoderTop10",
    },
    "phone__to_address": {
        "description": "The match status between the input phone and the input address. Enum: 'country-match', 'zip4-match', 'metro-match', 'city-state-match', 'postal-match', 'no-match', 'match'",
        "type": "object",
        "class": "categorical",
        "missing_values": "Need to check with Ekata",
        "nulls_method": "CategoricalImputer_Missing",  # Maybe need to change to 'no-match'
        "imputer": "OneHotEncoderTop10",
    },
    "address__validity_level": {
        "description": "The most granular level to which the address could be validated. Ex. If the address was only valid to the city level (but not to the house level), it would return “valid_to_city”. Enum: 'valid_to_house_number', 'missing_address', 'invalid', 'valid', 'valid_to_street', 'valid_to_country', 'valid_to_city', 'valid_to_house_number_missing_apt'",
        "type": "object",
        "class": "categorical",
        "missing_values": "None",
        "nulls_method": "CategoricalImputer_Missing",
        "imputer": "OneHotEncoderTop10",
    },
    "identity_network_score": {
        "description": "Comprehensive network score built on behavioral insights such as velocity, popularity, volatility and age of an attribute, with a higher score indicating a riskier account sign-up. A number between 0 and 1 rounded to three decimal places",
        "type": "numeric",
        "class": "numeric",
        "missing_values": "None",
        "nulls_method": "None",
        "imputer": "none",
    },
    "identity_risk_score": {
        "description": "Comprehensive identity risk score with a higher score indicating a riskier account signup",
        "type": "numeric",
        "class": "numeric",
        "missing_values": "None",
        "nulls_method": "None",
        "imputer": "none",
    },
    "warnings": {
        "description": "An array containing warning messages",
        "type": "object",
        "class": "general_info",
        "missing_values": "None",
        "nulls_method": "None",
        "imputer": "None",
    },
}
